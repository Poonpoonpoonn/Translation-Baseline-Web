import React, {Component} from 'react';
import MUIDataTable from "mui-datatables";
import {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';
import pink from 'material-ui/colors/pink';
import {QUERY_EVENT_SUMMARY_API, TABLE_MAPPING_INDEX, EXPORT_DATA_API} from '../Constants.js'
import LoadingOverlay from 'react-loading-overlay';
import CustomToolbar from "../components/CustomToolbar.jsx";
import EventDetailContainer from "./EventDetailContainer";
import ReactDataGrid from 'react-data-grid';
import {Column, Table} from 'react-virtualized';
import fileSaver from 'file-saver'
import axios from 'axios'
import 'react-virtualized/styles.css';
import Button from '@material-ui/core/Button';
import EditIcon from '@material-ui/icons/EditRounded';
import orange from '@material-ui/core/colors/orange';
import PreviewIcon from '@material-ui/icons/RemoveRedEyeRounded';
import DownloadIcon from '@material-ui/icons/CloudDownloadRounded';
import Alert from 'react-s-alert';
import 'react-s-alert/dist/s-alert-default.css';
import 'react-s-alert/dist/s-alert-css-effects/flip.css';
//import MaterialTable from "material-table";


class TranslationBaselineTableContainer extends Component {

    constructor(props) {
        super(props);
        this.state = {
            columns: [
                {title: 'Name', field: 'name', editable: 'onUpdate'},
                {title: 'Surname', field: 'surname', editable: 'never'},
                {title: 'Birth Year', field: 'birthYear', type: 'numeric'},
                {
                    title: 'Birth Place',
                    field: 'birthCity',
                    lookup: {34: 'İstanbul', 63: 'Şanlıurfa'},
                },
            ],
            data: [
                {name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63},
                {name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34},
            ]
        }
    }

    render() {
        return (
           {/* <MaterialTable
                title="Disable Field Editable Preview"
                columns={this.state.columns}
                data={this.state.data}
                editable={{
                    onRowAdd: newData =>
                        new Promise((resolve, reject) => {
                            setTimeout(() => {
                                {
                                    const data = this.state.data;
                                    data.push(newData);
                                    this.setState({data}, () => resolve());
                                }
                                resolve()
                            }, 1000)
                        }),
                    onRowUpdate: (newData, oldData) =>
                        new Promise((resolve, reject) => {
                            setTimeout(() => {
                                {
                                    const data = this.state.data;
                                    const index = data.indexOf(oldData);
                                    data[index] = newData;
                                    this.setState({data}, () => resolve());
                                }
                                resolve()
                            }, 1000)
                        }),
                    onRowDelete: oldData =>
                        new Promise((resolve, reject) => {
                            setTimeout(() => {
                                {
                                    let data = this.state.data;
                                    const index = data.indexOf(oldData);
                                    data.splice(index, 1);
                                    this.setState({data}, () => resolve());
                                }
                                resolve()
                            }, 1000)
                        }),
                }}
            />*/}
        )
    }

}

export default TranslationBaselineTableContainer;
